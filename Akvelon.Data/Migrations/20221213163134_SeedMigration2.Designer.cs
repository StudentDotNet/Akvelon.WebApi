// <auto-generated />
using System;
using Akvelon.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Akvelon.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221213163134_SeedMigration2")]
    partial class SeedMigration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Akvelon.Data.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            CompletionDate = new DateTime(2012, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "DocumentService App",
                            Priority = 1,
                            StartDate = new DateTime(2011, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("2902b665-1190-4c70-9915-b9c2d7680450"),
                            CompletionDate = new DateTime(2012, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "DocumentService Api",
                            Priority = 1,
                            StartDate = new DateTime(2011, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("102b566b-ba1f-404c-b2df-e2cde39ade09"),
                            Name = "Search Service Api",
                            Priority = 2,
                            StartDate = new DateTime(2011, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("d28888e9-2ba9-474a-a40f-e38cb54f9b35"),
                            CompletionDate = new DateTime(12, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auth Service",
                            Priority = 3,
                            StartDate = new DateTime(11, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        });
                });

            modelBuilder.Entity("Akvelon.Data.Entities.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6b80c79-823e-466c-ba00-66b5ac8abec1"),
                            Description = "Configure service for importing pdf document",
                            Name = "Configure service for importing pdf document",
                            Priority = 1,
                            ProjectId = new Guid("2902b665-1190-4c70-9915-b9c2d7680450"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("e0e2f624-40c8-4b3f-bc2f-4cc4efcf6832"),
                            Description = "Cover the service with unit test",
                            Name = "Cover the service with unit test",
                            Priority = 2,
                            ProjectId = new Guid("2902b665-1190-4c70-9915-b9c2d7680450"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("bde46372-80a8-4578-8ac8-1b39047e322e"),
                            Description = "Deploy service in the Azure Cloud",
                            Name = "Deploy service in the Azure Cloud",
                            Priority = 3,
                            ProjectId = new Guid("2902b665-1190-4c70-9915-b9c2d7680450"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("c3c4a8ad-a580-4a56-992d-f04335dbfd85"),
                            Description = "Implementing UI part for document service",
                            Name = "Implementing UI part for document service",
                            Priority = 1,
                            ProjectId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("3f44d87e-04b4-439c-831b-f9e8713aab25"),
                            Description = "Manuially Testing of the UI",
                            Name = "Testing UI",
                            Priority = 1,
                            ProjectId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7d2f6df3-a0a2-47ae-9ae0-ab1789be7445"),
                            Description = "Integration testing",
                            Name = "Integration testing",
                            Priority = 1,
                            ProjectId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("30918f83-db5a-4a73-a643-4b73347ac994"),
                            Description = "Configure Elastic Search",
                            Name = "Configure Elastic Search",
                            Priority = 1,
                            ProjectId = new Guid("102b566b-ba1f-404c-b2df-e2cde39ade09"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("ba62b8e1-d0f4-49b3-8938-8b14b9c9f318"),
                            Description = "Create index for document",
                            Name = "Create index for document",
                            Priority = 2,
                            ProjectId = new Guid("102b566b-ba1f-404c-b2df-e2cde39ade09"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2a97bdfa-2002-46e8-a025-1e4565b90044"),
                            Description = "",
                            Name = "Implement searching using Nest sdk",
                            Priority = 3,
                            ProjectId = new Guid("102b566b-ba1f-404c-b2df-e2cde39ade09"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("05427b1b-f16d-4e2b-81b4-072988f69bdf"),
                            Description = "",
                            Name = "Investigate how to integrate Identity Server",
                            Priority = 1,
                            ProjectId = new Guid("d28888e9-2ba9-474a-a40f-e38cb54f9b35"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Akvelon.Data.Entities.Task", b =>
                {
                    b.HasOne("Akvelon.Data.Entities.Project", null)
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
